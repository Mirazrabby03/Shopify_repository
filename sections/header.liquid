{% comment %} <style>
                    .dropdown-menu {
                      position: absolute;
                      z-index: 50;
                    }
                    
                    .relative.bg-white {
                      position: relative;
                      z-index: 40;
                    }
</style> {% endcomment %}

{% assign menu = linklists[section.settings.menu] %}
{% comment %} {{ shop.customer_accounts_enabled }} {% endcomment %}
<div class="relative bg-white">
  <div class="mx-auto px-4 sm:px-6">
    <div class="flex justify-between items-center py-6 md:justify-start md:space-x-10">
      <!-- STORE NAME / STORE LOGO -->
      <div class="flex justify-start lg:flex-1 truncate">
        <h1 class="text-xl font-bold truncate">{{ shop.name }}</h1>
      </div>

      <div class="-mr-2 -my-2 ml-3 md:hidden">
        <button
          type="button"
          class="bg-white p-2 inline-flex items-center justify-center focus:outline-none"
          data-mobile-menu-button>
          {% render 'hamburger-icon' %}
        </button>
      </div>

      <!-- NAVIGATION MENU -->
      <nav class="hidden md:flex space-x-10">
        {% for link in menu.links %}
          {% if link.links != blank %}
            <div class="relative">
              <button type="button" class="inline-flex items-center text-base text-gray-500 hover:text-gray-900 ml-2 dropdown-toggle">
                {{ link.title }} {% render 'dropdown-icon' %}
              </button>

              <div class="absolute z-10 -ml-5 mt-5 transform px-2 w-screen max-w-md sm:px-0 lg:ml-0 lg:left-1/2 lg:-translate-x-1/2 dropdown-menu hidden">
                <div class="shadow-lg border ring-black ring-opacity-5 overflow-hidden rounded-lg">
                  <div class="relative grid gap-6 bg-white px-5 py-6 sm:gap-8 sm:p-8">
                    <!-- CREATE THE SUBLINK -->
                    {% for childlink in link.links %}
                      <a href="{{ childlink.url }}" class="-m-3 p-3 flex items start rounded-lg hover:bg-gray-100">
                        <div class="ml-4">
                          <p class="text-gray-900 text-base font-medium">
                            {{ childlink.title }}
                          </p>
                        </div>
                      </a>
                    {% endfor %}
                  </div>
                </div>
              </div>
            </div>

            <script>
              document.addEventListener('DOMContentLoaded', () => {
                const dropdownToggles = document.querySelectorAll('.dropdown-toggle');
                
                dropdownToggles.forEach(toggle => {
                  toggle.addEventListener('click', (e) => {
                    const dropdownMenu = toggle.nextElementSibling;
                    dropdownMenu.classList.toggle('hidden');
                  });
                });
              
                // Close dropdown when clicking outside
                document.addEventListener('click', (e) => {
                  if (!e.target.closest('.relative')) {
                    const dropdownMenus = document.querySelectorAll('.dropdown-menu');
                    dropdownMenus.forEach(menu => {
                      menu.classList.add('hidden');
                    });
                  }
                });
              });
            </script>
          {% else %}
            <div class="relative">
              <a href="{{ link.url }}" class="text-base text-gray-500 hover:text-gray-900">{{ link.title }}</a>
            </div>
          {% endif %}
        {% endfor %}
      </nav>

      <div class="hidden md:flex items-center justify-end md:flex-1 space-x-5">
        <a href="{{ routes.cart_url }}" class="whitespace-nowrap text-base text-gray-500 hover:text-gray-900">
          {% render 'cart-icon' %}
        </a>
        {% if shop.customer_accounts_enabled %}
          <a href="{{ routes.account_login_url }}" class="text-base text-gray-500 hover:text-gray-900">Login</a>
          <a href="{{ routes.account_register_url }}" class="text-base text-gray-500 hover:text-gray-900">Register</a>
        {% endif %}
      </div>
    </div>
  </div>

  <!-- MOBILE MENU CONTAINER -->
  <div id="mobile-menu" class="absolute z-10 top-0 inset-x-0 p-2 transform origin-top-left md:hidden hidden">
    <div class="shadow-lg rounded-lg ring-1 ring-black ring-opacity-5 bg-white w-full">
      <div class="p-5 divide-y-2 divide-gray-50">

        <!-- MOBILE MENU HEADER TITLE PLUS CLOSE BUTTON -->
        <div class="flex items-center justify-between pb-3">
          <div>
            <h1 class="text-lg text-gray-500">{{ section.settings.mobile_menu_title }}</h1>
          </div>
          <div class="-mr-2">
            <button type="button" class="mobile-menu-close bg-white rounded-md p-2 text-gray-500 hover:bg-gray-100">
              <span class="sr-only">Close menu</span>
              <svg
                class="h-6 w-6"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        </div>

        <!-- NAVIGATION LINKS FOR MOBILE MENU -->
        <div class="pt-3">
          <nav class="grid gap-y-7">
            {% for link in menu.links %}
              {% if link.links != blank %}
                <div class="relative">
                  <button type="button" class="mobile-dropdown-toggle text-base text-gray-500 hover:text-gray-900 flex items-center justify-between w-full">
                    <div>{{ link.title }}</div>
                    {% render 'dropdown-icon' %}
                  </button>

                  <div class="mobile-dropdown-menu hidden grid gap-y-7 py-3">
                    {% for childlink in link.links %}
                      <a href="{{ childlink.url }}" class="-m-3 p-3 mt-2 flex items-center rounded-md text-gray-500 hover:text-gray-900 hover:bg-gray-50">
                        <span class="ml-3 text-base font-medium text-gray-500">{{ childlink.title }}</span>
                      </a>
                    {% endfor %}
                  </div>
                </div>
              {% else %}
                <a href="{{ link.url }}" class="-m-3 p-3 flex items-center rounded-md text-gray-500 hover:text-gray-900 hover:bg-gray-50">
                  {{ link.title }}
                </a>
              {% endif %}
            {% endfor %}
          </nav>
        </div>
      </div>
    </div>
  </div>
  <script>
      document.addEventListener('DOMContentLoaded', function() {
    // Mobile menu open/close functionality
    const mobileMenuButton = document.querySelector('[data-mobile-menu-button]'); // We'll need to add this attribute to the menu button
    const mobileMenuClose = document.querySelector('.mobile-menu-close');
    const mobileMenu = document.getElementById('mobile-menu');
    
    if (mobileMenuButton && mobileMenu && mobileMenuClose) {
      mobileMenuButton.addEventListener('click', () => {
        mobileMenu.classList.remove('hidden');
      });
    
      mobileMenuClose.addEventListener('click', () => {
        mobileMenu.classList.add('hidden');
      });
    }
    
    // Mobile dropdown functionality 
    const dropdownToggles = document.querySelectorAll('.mobile-dropdown-toggle');
    
    dropdownToggles.forEach(toggle => {
      toggle.addEventListener('click', () => {
        const dropdownMenu = toggle.nextElementSibling;
        if (dropdownMenu && dropdownMenu.classList.contains('mobile-dropdown-menu')) {
          dropdownMenu.classList.toggle('hidden');
        }
      });
    });
      });
  </script>

</div>

{% schema %}
  {
    "name": "Header",
    "settings": [
      {
        "type": "text",
        "id": "mobile_menu_title",
        "label": "Title",
        "default": "Menu",
        "info": "This is the title of the mobile menu"
      }, {
        "type": "link_list",
        "id": "menu",
        "label": "Header Menu",
        "default": "main-menu"
      }
    ]
  }
{% endschema %}